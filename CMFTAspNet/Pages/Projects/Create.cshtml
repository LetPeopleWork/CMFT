@page
@using CMFTAspNet.Models
@model CMFTAspNet.Pages.Projects.CreateModel

@{
    ViewData["Title"] = Model.IsEditMode ? "Edit" : "Create";
}

<h1>Create</h1>

<h4>Project</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Project.Name" class="control-label"></label>
                <input asp-for="Project.Name" class="form-control" />
                <span asp-validation-for="Project.Name" class="text-danger"></span>
                <input type="hidden" asp-for="Project.Id" />
            </div>
            <div class="form-group">
                <label asp-for="Project.SearchBy" class="control-label">Search By:</label>
                <select asp-for="Project.SearchBy" class="form-control">
                    @foreach (var searchByValue in Enum.GetValues(typeof(SearchBy)))
                    {
                        <option value="@searchByValue">@searchByValue</option>
                    }
                </select>
                <span asp-validation-for="Project.SearchBy" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Project.SearchTerm" class="control-label"></label>
                <input asp-for="Project.SearchTerm" class="form-control" />
                <span asp-validation-for="Project.SearchTerm" class="text-danger"></span>
            </div>
            <div class="form-group" id="workItemTypesContainer">
                <label>Work Item Types:</label>
                @if (Model.Project.WorkItemTypes != null)
                {
                    foreach (var workItemType in Model.Project.WorkItemTypes)
                    {
                        <div class="input-group mb-3">
                            <input asp-for="Project.WorkItemTypes" class="form-control" value="@workItemType" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-danger remove-work-item" data-work-item="@workItemType">Remove</button>
                            </div>
                        </div>
                    }
                }
            </div>
            <button type="button" class="btn btn-success" id="addWorkItemType">Add Work Item Type</button>

            <div class="form-group">
                <label>Milestones:</label>
                <div id="milestonesContainer">
                    @for (int i = 0; i < Model.Project.Milestones.Count; i++)
                    {
                        <div class="input-group mt-2">
                            <input type="text" name="Project.Milestones[@i].Name" value="@Model.Project.Milestones[i].Name" class="form-control" placeholder="Name" />
                            <input type="date" name="Project.Milestones[@i].Date" value="@Model.Project.Milestones[i].Date.ToString("yyyy-MM-dd")" class="form-control" placeholder="Date" />
                            <div class="input-group-append">
                                <button class="btn btn-outline-danger remove-field" type="button">Remove</button>
                            </div>
                        </div>
                    }
                </div>
                <button type="button" id="addMilestone" class="btn btn-primary mt-2">Add Milestone</button>
            </div>


            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Project.IncludeUnparentedItems" /> @Html.DisplayNameFor(model => model.Project.IncludeUnparentedItems)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Project.DefaultAmountOfWorkItemsPerFeature" class="control-label">Default Work Items Per Feature:</label>
                <input asp-for="Project.DefaultAmountOfWorkItemsPerFeature" class="form-control" />
                <span asp-validation-for="Project.DefaultAmountOfWorkItemsPerFeature" class="text-danger"></span>
            </div>

            <!-- Multi-select dropdown for selecting teams -->
            <div class="form-group">
                <label>Select Teams:</label>
                <select asp-for="SelectedTeams" asp-items="Model.TeamsList" multiple class="form-control"></select>
                <span asp-validation-for="SelectedTeams" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("addWorkItemType").addEventListener("click", function () {
                var container = document.getElementById("workItemTypesContainer");
                var input = document.createElement("input");
                input.setAttribute("class", "form-control");
                input.setAttribute("name", "Project.WorkItemTypes");
                input.setAttribute("placeholder", "Enter work item type");
                container.appendChild(input);

                var buttonDiv = document.createElement("div");
                buttonDiv.setAttribute("class", "input-group-append");
                var button = document.createElement("button");
                button.setAttribute("type", "button");
                button.setAttribute("class", "btn btn-danger remove-work-item");
                button.textContent = "Remove";
                buttonDiv.appendChild(button);

                var inputGroup = document.createElement("div");
                inputGroup.setAttribute("class", "input-group mb-3");
                inputGroup.appendChild(input);
                inputGroup.appendChild(buttonDiv);
                container.appendChild(inputGroup);

                button.addEventListener("click", function () {
                    container.removeChild(inputGroup);
                });
            });

            document.querySelectorAll(".remove-work-item").forEach(function (button) {
                button.addEventListener("click", function () {
                    var container = document.getElementById("workItemTypesContainer");
                    container.removeChild(button.closest(".input-group.mb-3"));
                });
            });
        });

        // Function to prepopulate existing work item types when editing
        window.onload = function () {
            var existingWorkItemTypes = document.querySelectorAll('.form-control[name="Project.WorkItemTypes"]');
            existingWorkItemTypes.forEach(function (input) {
                if (input.value !== "") {
                    var container = document.getElementById("workItemTypesContainer");
                    var inputGroup = input.closest(".input-group.mb-3");
                    var button = inputGroup.querySelector(".btn.btn-danger.remove-work-item");
                    container.appendChild(inputGroup);

                    button.addEventListener("click", function () {
                        container.removeChild(inputGroup);
                    });
                }
            });
        };

        $(document).ready(function () {
            $("#addMilestone").click(function () {
                var index = $("#milestonesContainer").children().length;

                $("#milestonesContainer").append(`
                    <div class="input-group mt-2">
                        <input type="text" name="Project.Milestones[${index}].Name" class="form-control" placeholder="Name"/>
                        <input type="date" name="Project.Milestones[${index}].Date" class="form-control" placeholder="Date"/>
                        <div class="input-group-append">
                            <button class="btn btn-outline-danger remove-field" type="button">Remove</button>
                        </div>
                     </div>
                  `);
            });

            $(document).on("click", ".remove-field", function () {
                $(this).closest(".input-group").remove();
            });
        });

    </script>
}