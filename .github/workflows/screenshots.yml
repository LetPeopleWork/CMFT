name: Update Screenshots For Documentation

env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    AzureDevOpsLighthouseIntegrationTestToken: ${{ secrets.AZUREDEVOPSLIGHTHOUSEINTEGRATIONTESTTOKEN }}
    JiraLighthouseIntegrationTestToken: ${{ secrets.JIRALIGHTHOUSEINTEGRATIONTESTTOKEN }}
    AzureDevOpsLighthouseE2ETestToken: ${{secrets.AZUREDEVOPSLIGHTHOUSEE2ETESTTOKEN}}
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  screenshot:
    runs-on: ubuntu-latest
    name: Recreate and upload new Screenshots

    permissions:
        contents: write
        checks: write
        pull-requests: write
        statuses: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=dev-latest" >> $GITHUB_OUTPUT
          fi

      - name: Install E2E dependencies
        run: npm ci
        shell: bash
        working-directory: ./Lighthouse.EndToEndTests
  
      - name: Install Chromium
        run: npx playwright install chromium --with-deps
        shell: bash
        working-directory: ./Lighthouse.EndToEndTests

      - name: Run Lighthouse ${{ steps.version.outputs.VERSION }}
        run: docker run -p 5001:5001 -d --name lighthouse --restart always ghcr.io/letpeoplework/lighthouse:${{ steps.version.outputs.VERSION }}
        working-directory: ./Lighthouse.Backend

      - name: Wait for Lighthouse to start
        run: |
          echo "Waiting for server to be ready..."
          timeout 30 bash -c 'until curl --silent --fail --insecure https://localhost:5001; do sleep 1; done'
          echo "Server is ready!"
      
      - name: Recreating Screenshot using Playwright
        run: npm run screenshots
        shell: bash
        working-directory: ./Lighthouse.EndToEndTests
        env:
          LIGHTHOUSEURL: https://localhost:5001

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git status
          git add .
          git commit -m "Update screenshots for version ${{ steps.version.outputs.VERSION }}" || echo "No changes to commit"
          git status
          git push --force origin HEAD:main || echo "No changes to push"
          git status