name: Build And Deploy Lighthouse

env:
  DOTNET_VERSION: '8'  
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AzureDevOpsLighthouseIntegrationTestToken: ${{ secrets.AZUREDEVOPSLIGHTHOUSEINTEGRATIONTESTTOKEN }}
  JiraLighthouseIntegrationTestToken: ${{ secrets.JIRALIGHTHOUSEINTEGRATIONTESTTOKEN }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{env.DOTNET_ROOT}}

    - name: SonarCloud
      uses: highbyte/sonarscan-dotnet@v2.3.1
      with:
        sonarProjectKey: LetPeopleWork_Lighthouse
        sonarProjectName:  Lighthouse
        sonarOrganization: letpeoplework
        dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"

    - name: dotnet publish
      run: dotnet publish -c Release -f net8.0 -o ./publish
      working-directory: ./Lighthouse

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: Lighthouse
        path: ./Lighthouse/publish

  deploy:
    runs-on: ubuntu-latest
    needs: build

    #if: github.ref == 'refs/heads/main'   

    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: Lighthouse

      - name: Deploy to Azure Web App
        id: deploy-to-webapp  
        uses: azure/webapps-deploy@v2  
        with:  
          app-name: 'LighthouseCloudDemo'  
          slot-name: 'production'  
          package: .  
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_b2451da2f37a4b24932049f5b05e6a46 }}
  