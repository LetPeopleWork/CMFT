name: Build And Deploy Lighthouse

env:
  DOTNET_VERSION: '8'  
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AzureDevOpsLighthouseIntegrationTestToken: ${{ secrets.AZUREDEVOPSLIGHTHOUSEINTEGRATIONTESTTOKEN }}
  JiraLighthouseIntegrationTestToken: ${{ secrets.JIRALIGHTHOUSEINTEGRATIONTESTTOKEN }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - name: SonarCloud
      uses: highbyte/sonarscan-dotnet@v2.3.1
      with:
        sonarProjectKey: LetPeopleWork_Lighthouse
        sonarProjectName:  Lighthouse
        sonarOrganization: letpeoplework
        dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"

  deploy:
    runs-on: ubuntu-latest
    #needs: build
    #if: github.ref == 'refs/heads/main'   

    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    permissions:
      id-token: write #This is required for requesting the JWT

    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.DOTNET_ROOT}}

      - name: Generate build number
        id: buildnumber
        run: echo "BUILD_NUMBER=$(date +'%Y.%m.%d').${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      - name: Update appsettings.json
        run: jq '.LighthouseVersion = env.BUILD_NUMBER' appsettings.json > temp.json && mv temp.json appsettings.json
        working-directory: ./Lighthouse

      - name: dotnet publish
        run: dotnet publish -c Release -o ./publish
        working-directory: ./Lighthouse

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: Lighthouse_v${{ env.BUILD_NUMBER }}
          path: ./Lighthouse/publish

      #- name: Login to Azure
      #  uses: azure/login@v1
      #  with:
      #    client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8A96BB1E9EB043EE9CB0B648544834B0 }}
      #    tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6D622DE733434D3A987E82D0DBCEE2B3 }}
      #    subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6A0B9B55694C47F4A1D8CEA847E84D78 }}

      #- name: Deploy to Azure Web App
      #  id: deploy-to-webapp  
      #  uses: azure/webapps-deploy@v2  
      #  with:  
      #    app-name: 'LighthouseCloudDemo'  
      #    slot-name: 'production'  
      #    package: ./Lighthouse/publish
  